// Generated by Anvil.
// https://github.com/square/anvil
@file:Suppress(
  "DEPRECATION",
  "OPT_IN_USAGE",
  "OPT_IN_USAGE_ERROR",
)

package com.r0adkll.feed.`impl`.datasource

import com.r0adkll.common.coroutines.DispatcherProvider
import dagger.`internal`.Factory
import javax.inject.Provider
import kotlin.Suppress
import kotlin.jvm.JvmStatic

public class NetworkFeedDataSource_Factory(
  private val dispatcherProvider: Provider<DispatcherProvider>,
) : Factory<NetworkFeedDataSource> {
  override fun `get`(): NetworkFeedDataSource = newInstance(dispatcherProvider.get())

  public companion object {
    @JvmStatic
    public fun create(dispatcherProvider: Provider<DispatcherProvider>):
        NetworkFeedDataSource_Factory = NetworkFeedDataSource_Factory(dispatcherProvider)

    @JvmStatic
    public fun newInstance(dispatcherProvider: DispatcherProvider): NetworkFeedDataSource =
        NetworkFeedDataSource(dispatcherProvider)
  }
}
