// Generated by Anvil.
// https://github.com/square/anvil
@file:Suppress(
  "DEPRECATION",
  "OPT_IN_USAGE",
  "OPT_IN_USAGE_ERROR",
)

package com.r0adkll.feed.`impl`.ui

import com.r0adkll.feed.`impl`.ui.FeedScreen
import com.r0adkll.feed.api.FeedRepository
import dagger.MembersInjector
import dagger.`internal`.InjectedFieldSignature
import javax.inject.Provider
import kotlin.Suppress
import kotlin.jvm.JvmStatic

public class FeedScreen_MembersInjector(
  private val feedRepository: Provider<FeedRepository>,
) : MembersInjector<FeedScreen> {
  override fun injectMembers(instance: FeedScreen) {
    com.r0adkll.feed.`impl`.ui.FeedScreen_MembersInjector.injectFeedRepository(instance,
        feedRepository.get())
  }

  public companion object {
    @JvmStatic
    public fun create(feedRepository: Provider<FeedRepository>): MembersInjector<FeedScreen> =
        com.r0adkll.feed.`impl`.ui.FeedScreen_MembersInjector(feedRepository)

    @JvmStatic
    @InjectedFieldSignature("com.r0adkll.feed.impl.ui.FeedScreen.feedRepository")
    public fun injectFeedRepository(instance: FeedScreen, feedRepository: FeedRepository) {
      instance.feedRepository = feedRepository
    }
  }
}
